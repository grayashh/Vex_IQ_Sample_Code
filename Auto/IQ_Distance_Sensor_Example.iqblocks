{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-10\" y=\"10\"><next><block type=\"iq_other_comment\" id=\"tgI?Gj/rByfkXyVyB.zU\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"FBn,8qrv1Wa`nhSL%X~r\"><field name=\"comment\">로봇이 앞으로 운전하기 시작합니다.</field></shadow></value><next><block type=\"iq_drivetrain_drive\" id=\".7:pgw2**u)9xU1,:Tpv\"><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_other_comment\" id=\"JA0eGfX{/=.NpxK^X([=\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"E4KZ.#;os*~U*i#l_5Nr\"><field name=\"comment\">거리 센서가 물체와의 거리가 3인치 미만으로 감지되면 로봇이 주행을 중지합니다.</field></shadow></value><next><block type=\"iq_control_wait_until\" id=\"W=L@X[G[+}g}?t1V1uVV\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"B=$Yt^nX.TnVHx,#+CHr\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"xKGho6v5%$%;4=^cCi![\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_distance_object_distance\" id=\"vil)3qAfSGe+R@M_zYUE\"><field name=\"DISTANCE\">Distance7</field><field name=\"UNITS\">in</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"#8{QDO}R#+!at579#V5(\"><field name=\"NUM\">3</field></shadow></value></block></value><next><block type=\"iq_motion_stop_driving\" id=\"q6n!T$F,dp~7$jTGIqS.\"></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,6],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","width":"173","unit":"mm","gyroType":"integrated","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[7],"name":"Distance7","customName":false,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20211210.18.00.00","appVersion":"2.3.2","fileFormat":"1.0.1","icon":"","targetBrainGen":"Second","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT6, 1, true);\n\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, BrainInertial, 200);\n\ndistance Distance7 = distance(PORT7);\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  BrainInertial.calibrate();\n  while (BrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  // 로봇이 앞으로 운전하기 시작합니다.\n  Drivetrain.drive(forward);\n  // 거리 센서가 물체와의 거리가 3인치 미만으로 감지되면 로봇이 주행을 중지합니다.\n  waitUntil((Distance7.objectDistance(inches) < 3.0));\n  Drivetrain.stop();\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain Gyro\n  calibrateDrivetrain();\n\n  whenStarted1();\n}","target":"Physical"}