{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-9\" y=\"10\"><next><block type=\"iq_other_comment\" id=\"qxwx`JlE+[uEAx4q|Q1n\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Oz)-*4kZ:UTZ)LC_};_#\"><field name=\"comment\">방향을 0으로 설정하고 보다 정확한 판독을 위해 모터 속도를 20%로 설정합니다.</field></shadow></value><next><block type=\"iq_sensing_inertial_calibrate\" id=\"[YcE@[7%;-@aF~rt8$IL\"><field name=\"INERTIAL\">BrainInertial</field><next><block type=\"iq_sensing_set_gyro_heading\" id=\"L+SuQ#2ez2.JgFbiEGPu\"><field name=\"GYRO\">BrainInertial</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\".0X;md4pYNya^hy!r}Fh\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"gp8]:t!=eMCB|y6nZ-fy\"><field name=\"MOTOR\">LeftMotor</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"6VUbU:$1udPsvW[Sek7=\"><field name=\"NUM\">20</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"~N6eOC#Z|dXhoj+bFH=k\"><field name=\"MOTOR\">RightMotor</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"dmOxT);,8.X^cZtSM^Qs\"><field name=\"NUM\">20</field></shadow></value><next><block type=\"iq_other_comment\" id=\"cG_`j4}H_OR89^h,wgd+\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"sQn4$1Us/INRauJr1-d6\"><field name=\"comment\">왼쪽&amp;오른쪽 모터가 모두 오른쪽으로 회전하기 시작합니다.</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"E9/x~F~fGt-+OA/;=njv\"><field name=\"MOTOR\">LeftMotor</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_motion_spin\" id=\"GhI[)F|lRw6dvKI=4m~6\"><field name=\"MOTOR\">RightMotor</field><field name=\"DIRECTION\">rev</field><next><block type=\"iq_control_wait\" id=\"G*Nkur0Re(z}QG)Q9Dq8\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"c4s[(w@t/:^]#dz{$IU=\"><field name=\"NUM\">.25</field></shadow></value><next><block type=\"iq_other_comment\" id=\"].TXE`H+3pl((|bbU(bu\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"${;6n-gVz0)nKJYuofi_\"><field name=\"comment\">Inertial 방향이 50과 같거나 더 클 때까지 기다리다가 모터를 정지합니다.</field></shadow></value><next><block type=\"iq_control_wait_until\" id=\"]`IA+#-{)j:y)05BvC-h\"><value name=\"CONDITION\"><block type=\"iq_operator_greater_than\" id=\"pvyY{s_GMKv#_+N0,qKO\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"6DV.c@i,OQz$`_-_|_Qj\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_heading_of_gyro\" id=\"|lKzFxLf+y2S0rG(jA9:\"><field name=\"GYRO\">BrainInertial</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\":+k{wC3($[J%[SkJ.^=o\"><field name=\"NUM\">50</field></shadow></value></block></value><next><block type=\"iq_motion_stop_motor\" id=\"JTg#w,dZ$km(ya2H|21^\"><field name=\"MOTOR\">LeftMotor</field><next><block type=\"iq_motion_stop_motor\" id=\"`A^teZCNu]A@ek#=_Oho\"><field name=\"MOTOR\">RightMotor</field><next><block type=\"iq_other_comment\" id=\"V`k0O25R?g3+g3o:(1cX\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"?Hx*OjJyoHTka|NDfpr#\"><field name=\"comment\">Screen에 Inertial값을 출력합니다.</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"jKb}mcUwM05+mrggKsA_\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"tt}QNSq_pRYs;;f5NQ/K\"><field name=\"TEXT\">Hello</field></shadow><block type=\"iq_sensing_heading_of_gyro\" id=\"RWN;8h?)VNkW`m}d/tm]\"><field name=\"GYRO\">BrainInertial</field></block></value><next><block type=\"iq_control_wait\" id=\"]OnkS%h/kQA9+lzrha+C\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"FIQks6Y9LtL2rAZ_f%6_\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_other_comment\" id=\"Bu)d%TNz6;iqh+y$L2,I\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"w*]Gx2`^qQ=[-|34:_cB\"><field name=\"comment\">왼쪽&amp;오른쪽 모터가 모두 왼쪽으로 회전하기 시작합니다.</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"@fN)O^q/EoV|!Fl@u]`J\"><field name=\"MOTOR\">LeftMotor</field><field name=\"DIRECTION\">rev</field><next><block type=\"iq_motion_spin\" id=\"L1V:V^3PHCEai{m=$dp`\"><field name=\"MOTOR\">RightMotor</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_control_wait\" id=\"Q{r8,T-6Blr~L2P)0Hz#\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\".{4W#dkTiLoYr(;10)8x\"><field name=\"NUM\">.25</field></shadow></value><next><block type=\"iq_other_comment\" id=\"@6uxW`5X$bF;U,EK~?~B\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Xm5qVv;Jo~[4IHW|6e7u\"><field name=\"comment\">Inertial이 0도 방향을 통과하도록 합니다.</field></shadow></value><next><block type=\"iq_control_wait_until\" id=\"2.IV818FwcDV,D+t(pZ.\"><value name=\"CONDITION\"><block type=\"iq_operator_greater_than\" id=\"JLavHC`QcpU@g/^SebaQ\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"D]Q#b2:4z4b%pN5z@1lq\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_heading_of_gyro\" id=\"8D8;a@$MQ-3x#3RjC$LU\"><field name=\"GYRO\">BrainInertial</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"Ad)Q3]nm@:$`!`j,{9$c\"><field name=\"NUM\">60</field></shadow></value></block></value><next><block type=\"iq_other_comment\" id=\"b,$,!BWI^6{+td1~+6cu\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\".H}{hXD1R~$*.lN=ybFk\"><field name=\"comment\">Inertial 방향이 180과 같거나 클 때까지 기다리다가 모터를 정지합니다.</field></shadow></value><next><block type=\"iq_control_wait_until\" id=\"k/Q?OMyLRfr2xHPq)=uw\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"E]k)In%X(yChSgQa:L]G\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"K%Uflxe!VWP3w5AkCtT?\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_heading_of_gyro\" id=\"NC~]p,ZNiO]!O55B|,$X\"><field name=\"GYRO\">BrainInertial</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"UPuN}Q,AieQjN9,L9OAg\"><field name=\"NUM\">180</field></shadow></value></block></value><next><block type=\"iq_motion_stop_motor\" id=\"yB]G,$D#J:6CPn^7tlV^\"><field name=\"MOTOR\">LeftMotor</field><next><block type=\"iq_motion_stop_motor\" id=\";D;9QBD]b/+M#:6NrmhQ\"><field name=\"MOTOR\">RightMotor</field><next><block type=\"iq_other_comment\" id=\"gSB!Dxlt(%7}Vo77ctTY\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"2b4X6nb1dI(,+x%~.eWD\"><field name=\"comment\">Screen에 Inertial값을 출력합니다.</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"jN#F-JOkdcL?3s^kz=#,\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"I)?_AIDV)NHjMN%7Zk^j\"><field name=\"TEXT\">Hello</field></shadow><block type=\"iq_sensing_heading_of_gyro\" id=\"`f;-%:t7L[7VgWt7Pw=d\"><field name=\"GYRO\">BrainInertial</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1],"name":"LeftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[6],"name":"RightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":true,"fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20211210.18.00.00","appVersion":"2.3.2","fileFormat":"1.0.1","icon":"","targetBrainGen":"Second","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftMotor = motor(PORT1, false);\nmotor RightMotor = motor(PORT6, true);\n\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  // 방향을 0으로 설정하고 보다 정확한 판독을 위해 모터 속도를 20%로 설정합니다.\n  BrainInertial.calibrate();\n  while (BrainInertial.isCalibrating()) { task::sleep(50); }\n  BrainInertial.setHeading(0.0, degrees);\n  LeftMotor.setVelocity(20.0, percent);\n  RightMotor.setVelocity(20.0, percent);\n  // 왼쪽&오른쪽 모터가 모두 오른쪽으로 회전하기 시작합니다.\n  LeftMotor.spin(forward);\n  RightMotor.spin(reverse);\n  wait(0.25, seconds);\n  // Inertial 방향이 50과 같거나 더 클 때까지 기다리다가 모터를 정지합니다.\n  waitUntil((BrainInertial.heading() > 50.0));\n  LeftMotor.stop();\n  RightMotor.stop();\n  // Screen에 Inertial값을 출력합니다.\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(BrainInertial.heading()));\n  Brain.Screen.newLine();\n  wait(1.0, seconds);\n  // 왼쪽&오른쪽 모터가 모두 왼쪽으로 회전하기 시작합니다.\n  LeftMotor.spin(reverse);\n  RightMotor.spin(forward);\n  wait(0.25, seconds);\n  // Inertial이 0도 방향을 통과하도록 합니다.\n  waitUntil((BrainInertial.heading() > 60.0));\n  // Inertial 방향이 180과 같거나 클 때까지 기다리다가 모터를 정지합니다.\n  waitUntil((BrainInertial.heading() < 180.0));\n  LeftMotor.stop();\n  RightMotor.stop();\n  // Screen에 Inertial값을 출력합니다.\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(BrainInertial.heading()));\n  return 0;\n}\n\n\nint main() {\n  whenStarted1();\n}","target":"Physical"}