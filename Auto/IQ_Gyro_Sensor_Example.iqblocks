{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"-10\"><next><block type=\"iq_other_comment\" id=\"Ikzq`P_gtU5W30yX@9dL\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"6YkM0C_g^B1~(xLp]-S%\"><field name=\"comment\">Gyro 센서 값을 보정하고 초기화 합니다.</field></shadow></value><next><block type=\"iq_sensing_calibrate_gyro\" id=\"~#FN@K9/k8h/0NHHXx[w\"><field name=\"GYRO\">Gyro5</field><field name=\"setting\">quick</field><next><block type=\"iq_sensing_set_gyro_heading\" id=\"~KC4Oe43y#)|@fD8cKw?\"><field name=\"GYRO\">Gyro5</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"qj:W!--DB46~Iw(A2^T$\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_sensing_set_gyro_rotation\" id=\"uOh]JaTE9^1x[H!biQ~~\"><field name=\"GYRO\">Gyro5</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"vv:1c$Xu2Tp:yRMz2lP)\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_looks_set_font\" id=\"y.Tb`Rze{M2a2b;3lK}L\"><field name=\"FONT\">mono12</field><next><block type=\"iq_other_comment\" id=\"#*v7Z)PJyHG`LD5/Rdck\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"YURX~SIE(Bo!8^Un@4,1\"><field name=\"comment\">무한 루프에서 Screen에 Gyro Sensor 값을 출력합니다.</field></shadow></value><next><block type=\"iq_control_forever\" id=\"IE^xy*G^9MD79B[^_Oz!\"><statement name=\"SUBSTACK\"><block type=\"iq_other_comment\" id=\"xG1]ER5GhE0]_1b.$I]1\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"iz^f7fcc#6(Q{lXEklaf\"><field name=\"comment\">화면을 지우고 커서를 각 루프의 왼쪽 상단 모서리로 설정합니다.</field></shadow></value><next><block type=\"iq_looks_clear_all_rows_new\" id=\"QqJdWxQav=^R5(z{wn*r\"><field name=\"TARGET\">Brain</field><next><block type=\"iq_looks_set_cursor_new\" id=\"!cfGgSop2WbXZzE}J;_B\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"r4vE;=!1@CQVoT2_I}Y0\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\":4([/eRn`Y~kEt2m}z,W\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"N-2?:%77lCK9b6lVT:2}\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"22g,~-@z%X_2=Fo,$[YX\"><field name=\"TEXT\">Heading:</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"b6@?+FxRs~HWZ18xB=~~\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"vNdrhf@rR%AC88$N_fB[\"><field name=\"TEXT\">Hello</field></shadow><block type=\"iq_sensing_heading_of_gyro\" id=\"=,T:Q4`9OgtI7#qL[-_@\"><field name=\"GYRO\">Gyro5</field></block></value><next><block type=\"iq_looks_print_new\" id=\"~-p))+LFUdOMnU$x0Ljc\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"wRPg~mEB,UZkfTW{hl)4\"><field name=\"TEXT\">degrees</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"PSy_12-qbj+X-m8k|s4A\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"yyD2hIU%/xnF5.9M6{K-\"><field name=\"TEXT\">Rotation:</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"zT55BFw0CK*G5PEv#I(3\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"/?$`e/44!ia?EZ_PsFLK\"><field name=\"TEXT\">Hello</field></shadow><block type=\"iq_sensing_rotation_of_gyro\" id=\",f^3X*8c-IYI[8~A^7Aw\"><field name=\"GYRO\">Gyro5</field></block></value><next><block type=\"iq_looks_print_new\" id=\"!mB|,6K^R=6{`S.1a|vL\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"NqjH5|e1^o9?+zJ:`y#+\"><field name=\"TEXT\">degrees</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"8t*dhC9X_78I0myY_Y!f\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"is_KR:gGOa5$:?woFJ#?\"><field name=\"TEXT\">Rate:</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"Zu?:Vd7Yv(Lorgfj4XMW\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"})X)%hd,LUpF{,a02:Kb\"><field name=\"TEXT\">Hello</field></shadow><block type=\"iq_sensing_rate_of_gyro\" id=\"u?~y9%B^QTi2PpgtR+fZ\"><field name=\"GYRO\">Gyro5</field></block></value><next><block type=\"iq_looks_print_new\" id=\"(,NOH6GLiHi|lzyjh#B)\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"T:V4fu|x!?En#lh`=x$%\"><field name=\"TEXT\">dps</field></shadow></value><next><block type=\"iq_control_wait\" id=\"DSw2,-b@Jz*T9G%g_~:Q\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"bpy%;|wUDg5ywRYj[ulN\"><field name=\"NUM\">0.2</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,6,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[5],"name":"Gyro5","customName":false,"deviceType":"Gyro","deviceClass":"gyro","setting":{},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20211210.18.00.00","appVersion":"2.3.2","fileFormat":"1.0.1","icon":"","targetBrainGen":"Second","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT6, 1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 173, 76, mm, 1);\ngyro Gyro5 = gyro(PORT5);\n\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  // Gyro 센서 값을 보정하고 초기화 합니다.\n  Gyro5.calibrate(calNormal);\n  Gyro5.setHeading(0.0, degrees);\n  Gyro5.setRotation(0.0, degrees);\n  Brain.Screen.setFont(mono12);\n  // 무한 루프에서 Screen에 Gyro Sensor 값을 출력합니다.\n  while (true) {\n    // 화면을 지우고 커서를 각 루프의 왼쪽 상단 모서리로 설정합니다.\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.print(\"Heading:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Gyro5.heading()));\n    Brain.Screen.print(\"degrees\");\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Rotation:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Gyro5.rotation()));\n    Brain.Screen.print(\"degrees\");\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Rate:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Gyro5.rate()));\n    Brain.Screen.print(\"dps\");\n    Brain.Screen.newLine();\n    wait(0.2, seconds);\n  wait(20, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  whenStarted1();\n}","target":"Physical"}